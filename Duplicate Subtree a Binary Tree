/*The structure of the Binary Tree Node  is
struct Node
{
  char data;
  struct Node* left;
  struct Node* right;
};*/

class Solution {
    map<string , int>mp;
    string solve(Node * root){
        if(root == NULL) return "$";
        string ans = "";
        if(!root->left && !root->right) {
            ans = to_string(root->data);
            return ans;
        }
        ans += to_string(root->data);
        ans += solve(root->left);
        ans += solve(root->right);
        mp[ans]++; // incremneting the frequency of ans string
        return ans;
    }
    public:
    /*This function returns true if the tree contains 
    a duplicate subtree of size 2 or more else returns false*/
    int dupSub(Node *root) {
        mp.clear();
        solve(root);
        for(auto x: mp){
            if(x.second>=2) return 1;
        }
        return 0;
    }
};
